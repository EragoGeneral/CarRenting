<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sz.erago.dao.SystemRoleDao" >
  <resultMap id="BaseResultMap" type="com.sz.erago.model.system.SystemRole" >
    <id column="ID" property="id"/>    
    <result column="Code" property="code"/>
    <result column="Name" property="name"/>
    <result column="Order_No" property="orderNo"/>
    <result column="Description" property="description"/>    
    <result column="Create_By" property="createBy"/>
    <result column="Create_Date" property="createDate"/>
    <result column="Update_By" property="updateBy"/>
    <result column="Update_Date" property="updateDate"/>    
    <result column="Is_Deleted" property="isDeleted"/>
  </resultMap>
  <sql id="Base_Column_List" >
    ID, Code, Name, Order_No, Description, Create_By, Create_Date, Update_By, Update_Date, Is_Deleted
  </sql>
  
  <select id="getRoleCount" resultType="java.lang.Long" parameterType="com.sz.erago.model.system.SystemRole">
  	select 
  	 count(*) as totalCount
  	from ubt_system_roles
  	where is_deleted = '0'
  	<if test="code != null and code != ''" >
       and Code like CONCAT('%',#{code},'%') 
    </if>
    <if test="name != null and name != ''" >
       and Name like CONCAT('%',#{name},'%')
    </if>
    <if test="description != null and description != ''" >
       and Description like CONCAT('%',#{description},'%') 
    </if>  	
  </select>
  
  <select id="queryRoleList" resultMap="BaseResultMap"  parameterType="java.util.Map">
  	select 
  		<include refid="Base_Column_List" />
  	from ubt_system_roles
  	where is_deleted = '0'
  	<if test="role.code != null and role.code != ''" >
       and Code like CONCAT('%',#{role.code},'%') 
    </if>
    <if test="role.name != null and role.name != ''" >
       and Name like CONCAT('%',#{role.name},'%')
    </if>
    <if test="role.description != null and role.description != ''" >
       and Description like CONCAT('%',#{role.description},'%') 
    </if>
  	order by Order_No
  	limit #{startIndex}, #{rows}
  </select>
  
  <select id="getRoleInfoByID" resultMap="BaseResultMap" parameterType="java.lang.Long">
  	select 
    <include refid="Base_Column_List" />
    from ubt_system_roles
    where ID = #{id} and is_deleted = '0'
  </select>
  
  <select id="queryRoleByUserID"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	SELECT role.ID, role.Name
	FROM ubt_system_roles role
	JOIN ubt_system_user_role sur ON sur.Role_ID = role.ID and sur.Is_Deleted = '0'
	JOIN ubt_system_users u ON u.ID = sur.User_ID
	where sur.User_id = #{id}  	
  </select>
  
  <select id="queryRoleAvailableForUser" resultMap="BaseResultMap" parameterType="java.util.Map">
  	SELECT DISTINCT role.ID, role.Name
	FROM ubt_system_roles role
	JOIN ubt_system_user_role sur ON sur.Role_ID = role.ID and sur.Is_Deleted = '0'
	JOIN ubt_system_users u ON u.ID = sur.User_ID
	LEFT JOIN (
		SELECT t1.Role_ID FROM ubt_system_user_role t1 WHERE t1.User_ID = #{id} and t1.Is_Deleted = '0'
	) tt ON tt.Role_ID = role.ID
	WHERE u.ID = #{curUserID} AND tt.Role_ID IS NULL	
  </select>
  
  <select id="queryRoleAvailableForAdmin" resultMap="BaseResultMap" parameterType="java.util.Map">
  	SELECT r.ID, r.Name FROM ubt_system_roles r
	LEFT JOIN (SELECT r.id FROM ubt_system_roles r
	JOIN ubt_system_user_role sur ON sur.Role_ID = r.id AND sur.Is_Deleted = '0' 
	JOIN ubt_system_users u ON u.ID = sur.User_ID AND u.Login_Name = 'admin') rr ON r.ID = rr.ID
	WHERE rr.id IS NULL
  </select>
  
  
  <insert id="addRole" parameterType="com.sz.erago.model.system.SystemRole" useGeneratedKeys="true" keyProperty="id">
    insert into ubt_system_roles
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="code != null" >
        Code,
      </if>
      <if test="name != null" >
        Name,
      </if>
      <if test="orderNo != null" >
        Order_No,
      </if>
      <if test="description != null" >
        Description,
      </if>      
      <if test="createBy != null" >
        Create_By,
      </if>
      <if test="createDate != null" >
        Create_Date,
      </if>
      <if test="updateBy != null" >
        Update_By,
      </if>
      <if test="updateDate != null" >
        Update_Date,
      </if>
      <if test="isDeleted != null" >
        Is_Deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="code != null" >
        #{code},
      </if>
      <if test="name != null" >
        #{name},
      </if>
      <if test="orderNo != null" >
        #{orderNo},
      </if>
      <if test="description != null" >
        #{description},
      </if>
      <if test="createBy != null" >
        #{createBy},
      </if>
      <if test="createDate != null" >
        #{createDate},
      </if>
      <if test="updateBy != null" >
        #{updateBy},
      </if>
      <if test="updateDate != null" >
        #{updateDate},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted},
      </if>
    </trim>
  </insert>
  
	<update id="updateRole" parameterType="com.sz.erago.model.system.SystemRole" >
    update ubt_system_roles
    <set >
      <if test="code != null" >
        Code = #{code},
      </if>
      <if test="name != null" >
        Name = #{name},
      </if>
      <if test="orderNo != null" >
        Order_No = #{orderNo},
      </if>
      <if test="description != null" >
        Description = #{description},
      </if>      
      <if test="updateBy != null" >
        Update_By = #{updateBy},
      </if>
      <if test="updateDate != null" >
        Update_Date = #{updateDate},
      </if>
    </set>
    where ID = #{id}
  </update>
  
  <update id="deleteRole" parameterType="java.lang.Long">
  	update ubt_system_roles
  	set is_deleted = '1'
    where ID = #{id}
  </update>
  
  	<!-- <resultMap id="queryForListMap" type="com.sz.erago.model.system.SystemRole" extends="BaseResultMap">  
        <collection property="resources" ofType="com.sz.erago.model.system.SystemResource">  
            <id property="id" column="ID" />  
            <result property="name" column="Name" />  
            <result property="url" column="Url" />  
        </collection>
    </resultMap>
    
    <select id="queryResourceByRole" resultMap="queryForListMap" parameterType="java.lang.Long">  
        SELECT 
        	r.code, r.name, res.id, res.name
		FROM ubt_system_roles r
		left JOIN ubt_system_role_resource srr ON r.ID = srr.Role_ID
		left JOIN ubt_system_resources res ON srr.Res_ID = res.ID
		WHERE r.ID = #{id}
    </select>  -->
    
    <insert id="grantResourceToRole" parameterType="java.util.List">  
	    insert into ubt_system_role_resource (Role_ID, Res_ID, Create_By, Create_Date, 
	    	Update_By, Update_Date, Is_Deleted)   
	    values  
	    <foreach collection="list" item="item" index="index" separator="," >  
	        (#{item.roleID}, #{item.resID}, #{item.createBy}, #{item.createDate}, 
	        #{item.updateBy}, #{item.updateDate}, #{item.isDeleted} )  
	    </foreach>  
	</insert>  
	
	<update id="revokeResourceFromRole" parameterType="java.util.Map">
        update ubt_system_role_resource 
        set Update_By = #{updateBy}, 
        Update_Date = #{updateDate},
        Is_Deleted = '1'
        where Role_ID = #{id}
    </update>
</mapper>